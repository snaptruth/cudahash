/*
 * bnconst.h
 *
 *  Created on: 2017年7月25日
 *      Author: likejun
 */

#ifndef INCLUDE_BNCONST_H_
#define INCLUDE_BNCONST_H_

/*
 * 系统参数相关定义
 */
#ifndef MSGMNB
#define     MSGMNB  16384000
#endif
#ifndef MSGMAX
#define     MSGMAX  8192
#endif

#ifdef WIN32
#define PATHINTERVAL    "\\"
#else
#define PATHINTERVAL    "/"
#endif

/*
 * 常量定义
 */
#define BN_UINT32_MAX 0xFFFFFFFF

/*
 * 定义程序运行过程中的错误代码
 */
#ifdef SUCCESS
#undef SUCCESS
#endif

#ifdef ERROR
#undef ERROR
#endif

#define ERRCODE				unsigned int
#define SUCCESS 			0
#define ERROR 				1
#define ERROR_NOMEMORY		2
#define ERROR_POINTERISNULL	3
#define ERROR_NOTFOUND      4
#define ERROR_PARAM         5
#define ERROR_GPUNOTEXIST   6
#define ERROR_TIMERCREATEERROR  7
#define ERROR_MSGQUEUEERROR     8
#define ERROR_UNKNOWN           9

/*
 * 定义线程优先级
 * WINDOWS系统优先级，数值越大优先级越高
 * 普通windows优先级只支持如下优先级的设置：-15,-2,-1,0,1,2,15
 * 实时windows优先级还支持如下优先级的设置：-7,-6,-5,-4,-3,3,4,5,6
 *
 * LINUX系统优先级，数值越大优先级越低
 * LINUX优先级版本不同支持优先级设置不同，协同WINDOWS优先级考虑，我们使用-15 ~ 15的范围，所以认为
 * LINUX优先级支持如下的设置-15 ~ 15
 *
 * 映射到BN系统的优先级[0,30], 数值越高优先级越大。31个优先级应该已经足够目前使用（linux系统）
 */
#ifdef WIN32
#define BN_THREAD_PRIORITY_BEGIN (-15)
#define BN_THREAD_PRIORITY_STEP (1)
#else
#define BN_THREAD_PRIORITY_BEGIN (15)
#define BN_THREAD_PRIORITY_STEP (-1)
#endif
#define BN_THREAD_PRIORITY_0    BN_THREAD_PRIORITY_BEGIN
#define BN_THREAD_PRIORITY_1    (BN_THREAD_PRIORITY_0 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_2    (BN_THREAD_PRIORITY_1 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_3    (BN_THREAD_PRIORITY_2 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_4    (BN_THREAD_PRIORITY_3 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_5    (BN_THREAD_PRIORITY_4 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_6    (BN_THREAD_PRIORITY_5 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_7    (BN_THREAD_PRIORITY_6 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_8    (BN_THREAD_PRIORITY_7 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_9    (BN_THREAD_PRIORITY_8 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_10   (BN_THREAD_PRIORITY_9 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_11   (BN_THREAD_PRIORITY_10 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_12   (BN_THREAD_PRIORITY_11 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_13   (BN_THREAD_PRIORITY_12 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_14   (BN_THREAD_PRIORITY_13 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_15   (BN_THREAD_PRIORITY_14 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_16   (BN_THREAD_PRIORITY_15 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_17   (BN_THREAD_PRIORITY_16 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_18   (BN_THREAD_PRIORITY_17 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_19   (BN_THREAD_PRIORITY_18 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_20   (BN_THREAD_PRIORITY_19 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_21   (BN_THREAD_PRIORITY_20 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_22   (BN_THREAD_PRIORITY_21 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_23   (BN_THREAD_PRIORITY_22 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_24   (BN_THREAD_PRIORITY_23 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_25   (BN_THREAD_PRIORITY_24 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_26   (BN_THREAD_PRIORITY_25 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_27   (BN_THREAD_PRIORITY_26 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_28   (BN_THREAD_PRIORITY_27 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_29   (BN_THREAD_PRIORITY_28 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_30   (BN_THREAD_PRIORITY_29 + BN_THREAD_PRIORITY_STEP)
#define BN_THREAD_PRIORITY_DEFAULT  BN_THREAD_PRIORITY_15
#define BN_THREAD_PRIORITY_MIN      BN_THREAD_PRIORITY_0
#define BN_THREAD_PRIORITY_MAX      BN_THREAD_PRIORITY_30

/*
 * 定义线程消息MSGID,注意最大0xFFFF
 */
#define BN_MSG_EXIT_THREAD          0x1
#define BN_MSG_CHANGE_PRIORITY      0x10
#define BN_MSG_CHANGE_NAME          0x11
#define BN_MSG_TIMER_0              0x200
#define BN_MSG_TIMER_1              0x201
#define BN_MSG_TIMER_2              0x202
#define BN_MSG_TIMER_3              0x203
#define BN_MSG_TIMER_4              0x204
#define BN_MSG_TIMER_5              0x205
#define BN_MSG_TIMER_6              0x206
#define BN_MSG_TIMER_7              0x207
#define BN_MSG_TIMER_8              0x208
#define BN_MSG_TIMER_9              0x209
#define BN_MSG_TIMER_10             0x20a
#define BN_MSG_LOG_CREATE           0x300
#define BN_MSG_LOG_ENABLE           0x301
#define BN_MSG_LOG_CLEAR            0x303
#define BN_MSG_LOG_DEBUG            0x310
#define BN_MSG_LOG_INTERFACE        0x311
#define BN_MSG_LOG_ERROR            0x312
#define BN_MSG_LOG_FATAL            0x313

/*
 * 定义线程消息队列起始ID
 */
#define BM_MSG_QUEUE_STARTID        0x8000
#define BM_MSG_QUEUE_LOGDISTRIBUTE  BM_MSG_QUEUE_STARTID

/*
 * 定义日志级别
 */
#define BN_LOGLEVEL_DEBUG       (1<<0)
#define BN_LOGLEVEL_INTERFACE   (1<<10)
#define BN_LOGLEVEL_ERROR       (1<<20)
#define BN_LOGLEVEL_FATAL       (1<<30)

/*
 * 定义日志模块标识
 * 最大0xFFFF
 */
#define BN_LOG_MODULE_BAAR      0x1000
#define BN_LOG_MODULE_BSDR      0x2000
#define BN_LOG_MODULE_BCR       0x3000
#define BN_LOG_MODULE_MAX       0xFFFF

#endif /* INCLUDE_BNCONST_H_ */
